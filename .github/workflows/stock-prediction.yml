name: MLflow Stock Prediction Pipeline

on:
  schedule:
    - cron: '0 0 * * *'  # Daily run
  workflow_dispatch:      # Manual trigger

env:
  MLFLOW_TRACKING_URI: file:${{ github.workspace }}/mlruns
  PYTHON_VERSION: '3.13'

jobs:
  train-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mlflow yfinance xgboost pandas numpy scikit-learn pytest

      - name: Setup MLflow
        run: |
          mkdir -p mlruns
          echo "MLFLOW_EXPERIMENT_NAME=stock_prediction" >> $GITHUB_ENV

      - name: Train model
        run: |
          python stock_price_prediction_validated.py
        
      - name: Run model tests
        run: |
          pytest test_model.py -v

      - name: Get latest run ID
        id: get_run
        run: |
          RUN_ID=$(mlflow runs list --experiment-name stock_prediction | grep "FINISHED" | head -n 1 | awk -F'|' '{print $2}' | xargs)
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV

      - name: Make predictions
        if: success()
        run: |
          python predict.py > predictions.txt

      - name: Check model metrics
        run: |
          python -c "
          import mlflow
          run = mlflow.get_run('${{ env.RUN_ID }}')
          metrics = run.data.metrics
          assert metrics['rmse'] < 10.0, 'RMSE too high'
          assert metrics['r2'] > 0.6, 'R2 too low'
          print('Metrics validation passed')
          "

      - name: Register model
        if: success()
        run: |
          mlflow models register-model \
            --model-uri "runs:/${{ env.RUN_ID }}/xgboost_model" \
            --name "stock_prediction_model"

      - name: Archive MLflow runs
        uses: actions/upload-artifact@v3
        with:
          name: mlflow-runs
          path: |
            mlruns/
            predictions.txt
          retention-days: 90

      - name: Store predictions
        uses: actions/upload-artifact@v3
        with:
          name: stock-predictions
          path: predictions.txt
          retention-days: 30

      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.name,
              title: 'MLflow Pipeline Failed',
              body: `Pipeline failed in ${process.env.GITHUB_WORKFLOW} workflow. Check the [Actions tab](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}) for details.`
            })
